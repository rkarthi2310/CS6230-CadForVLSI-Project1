/*
 * Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
 * 
 * On Sun Nov 17 07:27:54 IST 2024
 * 
 */

/* Generation options: */
#ifndef __mkTopSystolic_h__
#define __mkTopSystolic_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkSystolic.h"


/* Class declaration for the mkTopSystolic module */
class MOD_mkTopSystolic : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_a_matrix_top_0_0;
  MOD_Reg<tUInt32> INST_a_matrix_top_0_1;
  MOD_Reg<tUInt32> INST_a_matrix_top_0_2;
  MOD_Reg<tUInt32> INST_a_matrix_top_0_3;
  MOD_Reg<tUInt32> INST_a_matrix_top_1_0;
  MOD_Reg<tUInt32> INST_a_matrix_top_1_1;
  MOD_Reg<tUInt32> INST_a_matrix_top_1_2;
  MOD_Reg<tUInt32> INST_a_matrix_top_1_3;
  MOD_Reg<tUInt32> INST_a_matrix_top_2_0;
  MOD_Reg<tUInt32> INST_a_matrix_top_2_1;
  MOD_Reg<tUInt32> INST_a_matrix_top_2_2;
  MOD_Reg<tUInt32> INST_a_matrix_top_2_3;
  MOD_Reg<tUInt32> INST_a_matrix_top_3_0;
  MOD_Reg<tUInt32> INST_a_matrix_top_3_1;
  MOD_Reg<tUInt32> INST_a_matrix_top_3_2;
  MOD_Reg<tUInt32> INST_a_matrix_top_3_3;
  MOD_Reg<tUInt32> INST_a_matrix_top_4_0;
  MOD_Reg<tUInt32> INST_a_matrix_top_4_1;
  MOD_Reg<tUInt32> INST_a_matrix_top_4_2;
  MOD_Reg<tUInt32> INST_a_matrix_top_4_3;
  MOD_Reg<tUInt32> INST_a_matrix_top_5_0;
  MOD_Reg<tUInt32> INST_a_matrix_top_5_1;
  MOD_Reg<tUInt32> INST_a_matrix_top_5_2;
  MOD_Reg<tUInt32> INST_a_matrix_top_5_3;
  MOD_Reg<tUInt32> INST_a_matrix_top_6_0;
  MOD_Reg<tUInt32> INST_a_matrix_top_6_1;
  MOD_Reg<tUInt32> INST_a_matrix_top_6_2;
  MOD_Reg<tUInt32> INST_a_matrix_top_6_3;
  MOD_Reg<tUInt32> INST_b_matrix_top_0_0;
  MOD_Reg<tUInt32> INST_b_matrix_top_0_1;
  MOD_Reg<tUInt32> INST_b_matrix_top_0_2;
  MOD_Reg<tUInt32> INST_b_matrix_top_0_3;
  MOD_Reg<tUInt32> INST_b_matrix_top_1_0;
  MOD_Reg<tUInt32> INST_b_matrix_top_1_1;
  MOD_Reg<tUInt32> INST_b_matrix_top_1_2;
  MOD_Reg<tUInt32> INST_b_matrix_top_1_3;
  MOD_Reg<tUInt32> INST_b_matrix_top_2_0;
  MOD_Reg<tUInt32> INST_b_matrix_top_2_1;
  MOD_Reg<tUInt32> INST_b_matrix_top_2_2;
  MOD_Reg<tUInt32> INST_b_matrix_top_2_3;
  MOD_Reg<tUInt32> INST_b_matrix_top_3_0;
  MOD_Reg<tUInt32> INST_b_matrix_top_3_1;
  MOD_Reg<tUInt32> INST_b_matrix_top_3_2;
  MOD_Reg<tUInt32> INST_b_matrix_top_3_3;
  MOD_Reg<tUInt32> INST_c_matrix_top_0_0;
  MOD_Reg<tUInt32> INST_c_matrix_top_0_1;
  MOD_Reg<tUInt32> INST_c_matrix_top_0_2;
  MOD_Reg<tUInt32> INST_c_matrix_top_0_3;
  MOD_Reg<tUInt32> INST_c_matrix_top_1_0;
  MOD_Reg<tUInt32> INST_c_matrix_top_1_1;
  MOD_Reg<tUInt32> INST_c_matrix_top_1_2;
  MOD_Reg<tUInt32> INST_c_matrix_top_1_3;
  MOD_Reg<tUInt32> INST_c_matrix_top_2_0;
  MOD_Reg<tUInt32> INST_c_matrix_top_2_1;
  MOD_Reg<tUInt32> INST_c_matrix_top_2_2;
  MOD_Reg<tUInt32> INST_c_matrix_top_2_3;
  MOD_Reg<tUInt32> INST_c_matrix_top_3_0;
  MOD_Reg<tUInt32> INST_c_matrix_top_3_1;
  MOD_Reg<tUInt32> INST_c_matrix_top_3_2;
  MOD_Reg<tUInt32> INST_c_matrix_top_3_3;
  MOD_Reg<tUInt32> INST_c_matrix_top_4_0;
  MOD_Reg<tUInt32> INST_c_matrix_top_4_1;
  MOD_Reg<tUInt32> INST_c_matrix_top_4_2;
  MOD_Reg<tUInt32> INST_c_matrix_top_4_3;
  MOD_Reg<tUInt32> INST_c_matrix_top_5_0;
  MOD_Reg<tUInt32> INST_c_matrix_top_5_1;
  MOD_Reg<tUInt32> INST_c_matrix_top_5_2;
  MOD_Reg<tUInt32> INST_c_matrix_top_5_3;
  MOD_Reg<tUInt32> INST_c_matrix_top_6_0;
  MOD_Reg<tUInt32> INST_c_matrix_top_6_1;
  MOD_Reg<tUInt32> INST_c_matrix_top_6_2;
  MOD_Reg<tUInt32> INST_c_matrix_top_6_3;
  MOD_Reg<tUInt32> INST_counter;
  MOD_Reg<tUInt8> INST_s1_or_s2_systolic;
  MOD_mkSystolic INST_systolic_unit;
 
 /* Constructor */
 public:
  MOD_mkTopSystolic(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_set_A_matrix_in_a_matrix_in;
  tUWide PORT_set_B_matrix_in_b_matrix_in;
  tUWide PORT_get_matrix_mul_result;
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_x__h18595;
 
 /* Local definitions */
 private:
  tUWide DEF_systolic_unit_get_result___d106;
  tUInt8 DEF_s1_or_s2_in__h14273;
  tUInt32 DEF_x__h19196;
  tUInt32 DEF_x__h19091;
  tUInt32 DEF_x__h18986;
  tUInt32 DEF_x__h18784;
  tUWide DEF_c_matrix_top_0_3_51_CONCAT_c_matrix_top_1_2_52_ETC___d161;
  tUWide DEF_c_matrix_top_0_3_51_CONCAT_c_matrix_top_1_2_52_ETC___d154;
  tUWide DEF_c_matrix_top_1_3_56_CONCAT_c_matrix_top_2_2_57_ETC___d159;
  tUWide DEF_c_matrix_top_2_3_62_CONCAT_c_matrix_top_3_2_63_ETC___d167;
  tUWide DEF_c_matrix_top_3_3_68_CONCAT_c_matrix_top_4_2_69_ETC___d171;
 
 /* Rules */
 public:
  void RL_b_row3();
  void RL_b_row2();
  void RL_b_row1();
  void RL_b_row0();
  void RL_a_column0();
  void RL_a_column1();
  void RL_a_column2();
  void RL_a_column3();
  void RL_a_column4();
  void RL_a_column5();
  void RL_a_column6();
  void RL_a_dummy1();
  void RL_a_dummy2();
  void RL_a_dummy3();
  void RL_c_column6();
  void RL_c_column5();
  void RL_c_column4();
  void RL_c_column3();
  void RL_c_column2();
  void RL_c_column1();
  void RL_c_column0();
  void RL_count_up();
 
 /* Methods */
 public:
  void METH_set_A_matrix_in(tUWide ARG_set_A_matrix_in_a_matrix_in);
  tUInt8 METH_RDY_set_A_matrix_in();
  void METH_set_B_matrix_in(tUWide ARG_set_B_matrix_in_b_matrix_in);
  tUInt8 METH_RDY_set_B_matrix_in();
  void METH_set_s1_or_s2_top(tUInt8 ARG_set_s1_or_s2_top_s1_or_s2_in);
  tUInt8 METH_RDY_set_s1_or_s2_top();
  tUWide METH_get_matrix_mul_result();
  tUInt8 METH_RDY_get_matrix_mul_result();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTopSystolic &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTopSystolic &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTopSystolic &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkTopSystolic &backing);
};

#endif /* ifndef __mkTopSystolic_h__ */
